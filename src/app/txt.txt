при default навіть ангулар не знає що щось помінялось тому 

onPush- 


зона - це по суті манкіпатчинг для асинхронних дій 

monkeypathcing- зміна або розширення обєктів після їх створення (взяти ф-ю і змінити її поведінку, добавити якісь сайдефекти)

runOutsideAngular() - туди ми ставимо колбек який буде виконуватися за межами ангуларом (тобто не буде перерисовуватися дерево при дефолтній стратегії)

virtual dom i incremental dom 

два різних підходи для того щоб працбвати зі змінами в домі

virtual dom - в памяті додатку створюється упрощена копія дом 
якщо він бачить що в якомусь вузлі зміна він переносить ці зміни на справжній дом  (поганий підхід тому що треба все зберігати в памяті і треба якийсь алгоритм що буде чекати)

angular юзає incremental dom (він повільніший але менше памяті юзає )

angular повільніший за react i vue 

компіляція 

JIT Aot
Aot - зараньше щось скомпілювали (колись скачувався ангулар компілер але потім вирішили що краз всі привязки скомпілити )
jit - робимо якісь оптимізації деоптимізації і тд 

поняття програмний і виконуваний код 

при aot ангулар чекає який код не юзається і випилює його з бандла

dev tools такі як для ангулара працюють в aot 

